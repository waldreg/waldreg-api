<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.waldreg.acceptance.permission.PermissionAcceptanceTest" tests="24" skipped="0" failures="1" errors="0" timestamp="2023-01-31T11:11:53" hostname="LINIRINILINRIN" time="1.912">
  <properties/>
  <testcase name="특정 역할 조회 실패 인수테스트 - 잘못된 character-name 으로 조회" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="1.044"/>
  <testcase name="선택 가능한 permission 목록 조회 실패 인수 테스트 - 최고 관리자 아님" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.156"/>
  <testcase name="새로운 역할 추가 실패 인수 테스트 - 중복된 character_name 추가 요청" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.031"/>
  <testcase name="역할 생성 실패 테스트 - 역할 이름에 공백이 들어옴" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.03"/>
  <testcase name="특정 역할 수정 성공 인수테스트" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.029"/>
  <testcase name="특정 역할 수정 실패 인수테스트 - 수정할 이름 중복" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.039"/>
  <testcase name="특정 역할 수정 실패 인수테스트 - 최고 관리자가 아님" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.031"/>
  <testcase name="특정 역할 수정 실패 인수테스트 - 없는 permission_name 에 대해서 요청" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.028"/>
  <testcase name="특정 역할 수정 실패 인수테스트 - path-parameter 에 잘못된 character-name 으로 수정 요청" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.016"/>
  <testcase name="새로운 역할 추가 성공 인수 테스트" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.04">
    <failure message="java.lang.AssertionError: Status expected:&lt;200&gt; but was:&lt;400&gt;" type="java.lang.AssertionError">java.lang.AssertionError: Status expected:&lt;200&gt; but was:&lt;400&gt;
	at org.springframework.test.util.AssertionErrors.fail(AssertionErrors.java:59)
	at org.springframework.test.util.AssertionErrors.assertEquals(AssertionErrors.java:122)
	at org.springframework.test.web.servlet.result.StatusResultMatchers.lambda$matcher$9(StatusResultMatchers.java:627)
	at org.springframework.test.web.servlet.MockMvc$1.andExpect(MockMvc.java:212)
	at org.springframework.test.web.servlet.ResultActions.lambda$andExpectAll$0(ResultActions.java:86)
	at org.springframework.test.util.ExceptionCollector.execute(ExceptionCollector.java:49)
	at org.springframework.test.web.servlet.ResultActions.andExpectAll(ResultActions.java:86)
	at org.waldreg.acceptance.permission.PermissionAcceptanceTest.CREATE_NEW_CHARACTER_SUCCESS_ACCEPTANCE_TEST(PermissionAcceptanceTest.java:121)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.processAllTestClasses(JUnitPlatformTestClassProcessor.java:99)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor$CollectAllTestClassesExecutor.access$000(JUnitPlatformTestClassProcessor.java:79)
	at org.gradle.api.internal.tasks.testing.junitplatform.JUnitPlatformTestClassProcessor.stop(JUnitPlatformTestClassProcessor.java:75)
	at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.stop(SuiteTestClassProcessor.java:61)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:36)
	at org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)
	at org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:33)
	at org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:94)
	at com.sun.proxy.$Proxy2.stop(Unknown Source)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker$3.run(TestWorker.java:193)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.executeAndMaintainThreadName(TestWorker.java:129)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:100)
	at org.gradle.api.internal.tasks.testing.worker.TestWorker.execute(TestWorker.java:60)
	at org.gradle.process.internal.worker.child.ActionExecutionWorker.execute(ActionExecutionWorker.java:56)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:133)
	at org.gradle.process.internal.worker.child.SystemApplicationClassLoaderWorker.call(SystemApplicationClassLoaderWorker.java:71)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.run(GradleWorkerMain.java:69)
	at worker.org.gradle.process.internal.worker.GradleWorkerMain.main(GradleWorkerMain.java:74)
</failure>
  </testcase>
  <testcase name="새로운 역할 추가 실패 인수 테스트 - 잘못된 permission_name 에 대해 요청" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.041"/>
  <testcase name="역할 삭제 실패 인수 테스트 - 없는 역할에 대한 삭제 요청" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.02"/>
  <testcase name="역할 삭제 성공 인수 테스트" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.024"/>
  <testcase name="새로운 역할 생성 및 조회 성공 테스트 - permission에 공백" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.035"/>
  <testcase name="역할 삭제 실패 - 최고 관리자가 아님" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.043"/>
  <testcase name="특정 역할 조회 실패 인수테스트 - 최고 관리자가 아님" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.032"/>
  <testcase name="역할 목록 조회 실패 인수 테스트 - 최고 관리자가 아님" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.038"/>
  <testcase name="새로운 역할 추가 실패 인수 테스트 - 최고 관리자가 아닐때" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.038"/>
  <testcase name="특정 역할 조회 성공 인수 테스트" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.025"/>
  <testcase name="역할 목록 조회 성공 인수 테스트" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.029"/>
  <testcase name="특정 역할 수정 실패 인수테스트 - 잘못된 permission_status 로 수정 요청" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.03"/>
  <testcase name="새로운 역할 추가 실패 인수 테스트 - 잘못된 permission_status 요청" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.03"/>
  <testcase name="역할 수정 실패 테스트 - Guest 와 Admin 역할 수정 불가" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.02"/>
  <testcase name="선택가능한 permission 목록 조회 성공 인수 테스트" classname="org.waldreg.acceptance.permission.PermissionAcceptanceTest" time="0.037"/>
  <system-out><![CDATA[20:11:49.535 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
20:11:49.550 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
20:11:49.582 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [org.waldreg.acceptance.permission.PermissionAcceptanceTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
20:11:49.593 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.waldreg.acceptance.permission.PermissionAcceptanceTest], using SpringBootContextLoader
20:11:49.596 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [org.waldreg.acceptance.permission.PermissionAcceptanceTest]: class path resource [org/waldreg/acceptance/permission/PermissionAcceptanceTest-context.xml] does not exist
20:11:49.597 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [org.waldreg.acceptance.permission.PermissionAcceptanceTest]: class path resource [org/waldreg/acceptance/permission/PermissionAcceptanceTestContext.groovy] does not exist
20:11:49.597 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [org.waldreg.acceptance.permission.PermissionAcceptanceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
20:11:49.597 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [org.waldreg.acceptance.permission.PermissionAcceptanceTest]: PermissionAcceptanceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
20:11:49.647 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [org.waldreg.acceptance.permission.PermissionAcceptanceTest]
20:11:49.723 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [C:\Users\2001y\Desktop\linirinilinrin\DEV\project\waldreg-api\waldreg\application-layer\acceptance\build\classes\java\main\org\waldreg\Application.class]
20:11:49.724 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration org.waldreg.Application for test class org.waldreg.acceptance.permission.PermissionAcceptanceTest
20:11:49.809 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [org.waldreg.acceptance.permission.PermissionAcceptanceTest]: using defaults.
20:11:49.810 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
20:11:49.817 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.transaction.TransactionalTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttributeSource]
20:11:49.818 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [org/springframework/transaction/interceptor/TransactionAttribute]
20:11:49.818 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@61a5b4ae, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3a71c100, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5b69fd74, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@f325091, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@437e951d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@77b325b3, org.springframework.test.context.event.EventPublishingTestExecutionListener@63a5e46c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7e8e8651, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@49ef32e0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@271f18d3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6bd51ed8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@61e3a1fd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@51abf713]
20:11:49.821 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@65ef722a testClass = PermissionAcceptanceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@5fd9b663 testClass = PermissionAcceptanceTest, locations = '{}', classes = '{class org.waldreg.Application}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@4b3fa0b3, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@214894fc key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.client.servlet.OAuth2ClientAutoConfiguration, org.springframework.boot.autoconfigure.security.oauth2.resource.servlet.OAuth2ResourceServerAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration, org.springframework.boot.autoconfigure.security.servlet.UserDetailsServiceAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityConfiguration, org.springframework.boot.test.autoconfigure.web.reactive.WebTestClientAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7a527389, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5b04476e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@29e6eb25, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@43015c69], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.1)

2023-01-31 20:11:50.147  INFO 9476 --- [    Test worker] o.w.a.p.PermissionAcceptanceTest         : Starting PermissionAcceptanceTest using Java 11.0.17 on linirinilinrin with PID 9476 (started by 2001y in C:\Users\2001y\Desktop\linirinilinrin\DEV\project\waldreg-api\waldreg\application-layer\acceptance)
2023-01-31 20:11:50.150  INFO 9476 --- [    Test worker] o.w.a.p.PermissionAcceptanceTest         : No active profile set, falling back to 1 default profile: "default"
2023-01-31 20:11:53.472  INFO 9476 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-01-31 20:11:53.472  INFO 9476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-01-31 20:11:53.473  INFO 9476 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
2023-01-31 20:11:53.528  INFO 9476 --- [    Test worker] o.w.a.p.PermissionAcceptanceTest         : Started PermissionAcceptanceTest in 3.681 seconds (JVM running for 4.853)

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"98"]
             Body = {"name":"hello","user_id":"hello world","user_password":"abc1234!","phone_number":"010-1234-1234"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.user.UserController
           Method = org.waldreg.controller.user.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /character
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE0LCJleHAiOjE2NzUxNjcxMTR9.Z4ToF_5O81Se8npA3ypG50tA_aYDfOd0zHbqVjNEySk", Content-Length:"39"]
             Body = {"character_name":" ","permissions":[]}
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.character.CharacterController
           Method = org.waldreg.controller.character.CharacterController#createNewCharacter(CharacterRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.springframework.web.bind.MethodArgumentNotValidException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"messages":"character_name cannot be blank","document_url":"docs.waldreg.org"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /character
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE0LCJleHAiOjE2NzUxNjcxMTR9.Z4ToF_5O81Se8npA3ypG50tA_aYDfOd0zHbqVjNEySk", Content-Length:"123"]
             Body = {"character_name":"mock_character_name","permissions":[{"permission_name":"Character manager","permission_status":"true"}]}
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.character.CharacterController
           Method = org.waldreg.controller.character.CharacterController#createNewCharacter(CharacterRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"98"]
             Body = {"name":"hello","user_id":"hello world","user_password":"1234abc!","phone_number":"010-1234-1234"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.user.UserController
           Method = org.waldreg.controller.user.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /token
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"42"]
             Body = {"user_id":"Admin","user_password":"0000"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.auth.AuthController
           Method = org.waldreg.auth.AuthController#getToken(AuthTokenRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"access_token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM","token_type":"Bearer"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /token
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"42"]
             Body = {"user_id":"Admin","user_password":"0000"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.auth.AuthController
           Method = org.waldreg.auth.AuthController#getToken(AuthTokenRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"access_token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM","token_type":"Bearer"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /token
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"42"]
             Body = {"user_id":"Admin","user_password":"0000"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.auth.AuthController
           Method = org.waldreg.auth.AuthController#getToken(AuthTokenRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"access_token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM","token_type":"Bearer"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /character
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM", Content-Length:"194"]
             Body = {"character_name":"new character","permissions":[{"permission_name":"Character manager","permission_status":"true"},{"permission_name":"Fire other user permission","permission_status":"false"}]}
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.character.CharacterController
           Method = org.waldreg.controller.character.CharacterController#createNewCharacter(CharacterRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.waldreg.character.exception.UnknownPermissionException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"messages":"Unknown permission name \"Fire other user permission\"","document_url":"docs.waldreg.org"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /token
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"42"]
             Body = {"user_id":"Admin","user_password":"0000"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.auth.AuthController
           Method = org.waldreg.auth.AuthController#getToken(AuthTokenRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"access_token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM","token_type":"Bearer"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /character/new%20character
       Parameters = {}
          Headers = [Accept:"application/json", api-version:"1.0", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM"]
             Body = null
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.character.CharacterController
           Method = org.waldreg.controller.character.CharacterController#deleteCharacter(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.waldreg.character.exception.UnknownCharacterException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"messages":"Can not find character named \"new character\"","document_url":"docs.waldreg.org"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /character/new%20character
       Parameters = {}
          Headers = [Accept:"application/json", api-version:"1.0", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM"]
             Body = null
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.character.CharacterController
           Method = org.waldreg.controller.character.CharacterController#getCharacterByName(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = org.waldreg.character.exception.UnknownCharacterException

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 400
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"messages":"Can not find character named \"new character\"","document_url":"docs.waldreg.org"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /token
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"42"]
             Body = {"user_id":"Admin","user_password":"0000"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.auth.AuthController
           Method = org.waldreg.auth.AuthController#getToken(AuthTokenRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"access_token":"eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM","token_type":"Bearer"}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /character/hello%20world
       Parameters = {}
          Headers = [Accept:"application/json", api-version:"1.0", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM"]
             Body = null
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.character.CharacterController
           Method = org.waldreg.controller.character.CharacterController#getCharacterByName(String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"character_name":"hello world","permissions":[{"permission_name":"User fire manager","permission_status":"false"},{"permission_name":"Schedule update manager","permission_status":"false"},{"permission_name":"User info read manager","permission_status":"false"},{"permission_name":"User's character update manager","permission_status":"false"},{"permission_name":"Schedule create manager","permission_status":"false"},{"permission_name":"Reward manager","permission_status":"false"},{"permission_name":"Schedule delete manager","permission_status":"false"},{"permission_name":"Character manager","permission_status":"false"}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"98"]
             Body = {"name":"hello","user_id":"hello world","user_password":"abc!1234","phone_number":"010-1234-1234"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.user.UserController
           Method = org.waldreg.controller.user.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"100"]
             Body = {"name":"helloow","user_id":"hello world","user_password":"1ABV234!","phone_number":"010-1234-1234"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.user.UserController
           Method = org.waldreg.controller.user.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"101"]
             Body = {"name":"helloow","user_id":"hello world","user_password":"1234abcd!","phone_number":"010-1234-1234"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.user.UserController
           Method = org.waldreg.controller.user.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /user
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Accept:"application/json", api-version:"1.0", Content-Length:"108"]
             Body = {"name":"hong gil dong","user_id":"hello world","user_password":"abc1234!!!","phone_number":"010-1234-1234"}
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.user.UserController
           Method = org.waldreg.controller.user.UserController#createUser(UserRequest)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0"]
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /permission
       Parameters = {}
          Headers = [Accept:"application/json", api-version:"1.0", Authorization:"Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiIxIiwiaWF0IjoxNjc1MTYzNTE1LCJleHAiOjE2NzUxNjcxMTV9.UieRwaQEPTGFgfJutv_2SX-rE2SWB_1I802y9sLGCKM"]
             Body = null
    Session Attrs = {}

Handler:
             Type = org.waldreg.controller.character.CharacterController
           Method = org.waldreg.controller.character.CharacterController#getAllPermissions()

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Vary:"Origin", "Access-Control-Request-Method", "Access-Control-Request-Headers", Api-version:"1.0", Content-Type:"application/json"]
     Content type = application/json
             Body = {"permissions":[{"permission_name":"User fire manager","permission_info":"If set true, can fire other user","permission_status":["true","false"]},{"permission_name":"Schedule update manager","permission_info":"If set true, can update schedule","permission_status":["true","false"]},{"permission_name":"User info read manager","permission_info":"If set true, can read other user's information","permission_status":["true","false"]},{"permission_name":"User's character update manager","permission_info":"If set true, can update user's character","permission_status":["true","false"]},{"permission_name":"Schedule create manager","permission_info":"If set true, can create new schedule","permission_status":["true","false"]},{"permission_name":"Reward manager","permission_info":"If set true, all permissions related to the reward are accessible.","permission_status":["true","false"]},{"permission_name":"Schedule delete manager","permission_info":"If set true, can delete schedule","permission_status":["true","false"]},{"permission_name":"Character manager","permission_info":"If set true, Permission to edit, delete, or create new characters.","permission_status":["true","false"]}]}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
