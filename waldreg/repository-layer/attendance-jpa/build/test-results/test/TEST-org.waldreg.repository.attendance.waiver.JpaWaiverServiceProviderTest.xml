<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest" tests="1" skipped="0" failures="0" errors="0" timestamp="2023-02-26T09:45:11" hostname="xb-apple.local" time="0.163">
  <properties/>
  <testcase name="출석 면제 요청 승인 테스트" classname="org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest" time="0.163"/>
  <system-out><![CDATA[18:45:09.644 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
18:45:09.648 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
18:45:09.664 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest] from class [org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper]
18:45:09.672 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest]: class path resource [org/waldreg/repository/attendance/waiver/JpaWaiverServiceProviderTest-context.xml] does not exist
18:45:09.673 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest]: class path resource [org/waldreg/repository/attendance/waiver/JpaWaiverServiceProviderTestContext.groovy] does not exist
18:45:09.673 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest]: no resource found for suffixes {-context.xml, Context.groovy}.
18:45:09.700 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest]
18:45:09.708 [Test worker] DEBUG org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - @TestExecutionListeners is not present for class [org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest]: using defaults.
18:45:09.708 [Test worker] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
18:45:09.715 [Test worker] INFO org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@6bab2585, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74bdc168, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@644c78d4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@532a02d9, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@611f8234, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7bb3a9fe, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7cbee484, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7f811d00, org.springframework.test.context.event.EventPublishingTestExecutionListener@62923ee6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4089713, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@f19c9d2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7807ac2c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@b91d8c4, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@4b6166aa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@a77614d]
18:45:09.717 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@66ea1466 testClass = JpaWaiverServiceProviderTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1601e47 testClass = JpaWaiverServiceProviderTest, locations = '{}', classes = '{class org.waldreg.repository.attendance.JpaAttendanceTestInitializer, class org.waldreg.repository.attendance.waiver.WaiverRepositoryServiceProvider, class org.waldreg.repository.attendance.waiver.mapper.WaiverMapper}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:h2-application.properties}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3234f74e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@26a4842b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@d43f07c0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@350ec41e, [ImportsContextCustomizer@3bffddff key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2e029d61, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@132ddbab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
18:45:09.722 [Test worker] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@66ea1466 testClass = JpaWaiverServiceProviderTest, testInstance = org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest@4b21844c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1601e47 testClass = JpaWaiverServiceProviderTest, locations = '{}', classes = '{class org.waldreg.repository.attendance.JpaAttendanceTestInitializer, class org.waldreg.repository.attendance.waiver.WaiverRepositoryServiceProvider, class org.waldreg.repository.attendance.waiver.mapper.WaiverMapper}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:h2-application.properties}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3234f74e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@26a4842b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@d43f07c0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@350ec41e, [ImportsContextCustomizer@3bffddff key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2e029d61, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@132ddbab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.1)

2023-02-26 18:45:09.882  INFO 73552 --- [    Test worker] o.w.r.a.w.JpaWaiverServiceProviderTest   : Starting JpaWaiverServiceProviderTest using Java 11.0.15.1 on xb-apple.local with PID 73552 (started by devxb in /Users/devxb/develop/waldreg-api/waldreg/repository-layer/attendance-jpa)
2023-02-26 18:45:09.883  INFO 73552 --- [    Test worker] o.w.r.a.w.JpaWaiverServiceProviderTest   : No active profile set, falling back to 1 default profile: "default"
2023-02-26 18:45:10.056  INFO 73552 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-02-26 18:45:10.080  INFO 73552 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20 ms. Found 8 JPA repository interfaces.
2023-02-26 18:45:10.104  INFO 73552 --- [    Test worker] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2023-02-26 18:45:10.177  INFO 73552 --- [    Test worker] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:0128a58c-8b13-4cec-8422-6a8bd0efec4f;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2023-02-26 18:45:10.329  INFO 73552 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-02-26 18:45:10.358  INFO 73552 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.9.Final
2023-02-26 18:45:10.444  INFO 73552 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2023-02-26 18:45:10.500  INFO 73552 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table if exists attendance CASCADE 
Hibernate: drop table if exists attendance_type_reward CASCADE 
Hibernate: drop table if exists attendance_user CASCADE 
Hibernate: drop table if exists board CASCADE 
Hibernate: drop table if exists board_file_path_list CASCADE 
Hibernate: drop table if exists board_image_path_list CASCADE 
Hibernate: drop table if exists category CASCADE 
Hibernate: drop table if exists character CASCADE 
Hibernate: drop table if exists comment CASCADE 
Hibernate: drop table if exists permission CASCADE 
Hibernate: drop table if exists reaction CASCADE 
Hibernate: drop table if exists reaction_user CASCADE 
Hibernate: drop table if exists reward_tag CASCADE 
Hibernate: drop table if exists reward_tag_wrapper CASCADE 
Hibernate: drop table if exists schedule CASCADE 
Hibernate: drop table if exists team CASCADE 
Hibernate: drop table if exists team_building CASCADE 
Hibernate: drop table if exists team_user CASCADE 
Hibernate: drop table if exists user CASCADE 
Hibernate: drop table if exists user_joining_pool CASCADE 
Hibernate: drop table if exists waiver CASCADE 
Hibernate: drop sequence if exists hibernate_sequence
Hibernate: create sequence hibernate_sequence start with 1 increment by 1
Hibernate: create table attendance (attendance_attendance_id integer generated by default as identity, attendance_attendance_date date not null, attendance_type_reward_id integer not null, attendance_user_attendance_user_id integer not null, primary key (attendance_attendance_id))
Hibernate: create table attendance_type_reward (attendance_type_reward_id integer generated by default as identity, attendance_type_name varchar(255) not null, reward_tag_reward_tag_id integer, primary key (attendance_type_reward_id))
Hibernate: create table attendance_user (attendance_user_attendance_user_id integer generated by default as identity, user_id integer not null, primary key (attendance_user_attendance_user_id))
Hibernate: create table board (board_id integer generated by default as identity, board_content clob, board_created_at TIMESTAMP not null, board_last_modified_at TIMESTAMP not null, board_title varchar(250) not null, board_views integer not null, category_id integer not null, user_id integer not null, primary key (board_id))
Hibernate: create table board_file_path_list (board_board_id integer not null, board_file_path_list varchar(255))
Hibernate: create table board_image_path_list (board_board_id integer not null, board_image_path_list varchar(255))
Hibernate: create table category (category_id integer generated by default as identity, category_name varchar(50) not null, primary key (category_id))
Hibernate: create table character (character_id integer generated by default as identity, character_character_name varchar(25) not null, primary key (character_id))
Hibernate: create table comment (comment_id integer generated by default as identity, comment_content varchar(1000) not null, comment_created_at TIMESTAMP not null, comment_last_modified_at TIMESTAMP not null, board_id integer not null, user_id integer not null, primary key (comment_id))
Hibernate: create table permission (permission_id integer generated by default as identity, permission_name varchar(255) not null, permission_permission_unit_id integer not null, permission_service varchar(255) not null, permission_status varchar(255) not null, character_id integer, primary key (permission_id))
Hibernate: create table reaction (reaction_id integer generated by default as identity, board_id integer not null, primary key (reaction_id))
Hibernate: create table reaction_user (reaction_user_id integer generated by default as identity, reaction_id integer not null, user_id integer not null, primary key (reaction_user_id))
Hibernate: create table reward_tag (reward_tag_reward_tag_id integer generated by default as identity, reward_tag_reward_point integer not null, reward_tag_reward_tag_title varchar(105) not null, primary key (reward_tag_reward_tag_id))
Hibernate: create table reward_tag_wrapper (reward_tag_wrapper_reward_id integer not null, reward_tag_wrapper_reward_presented_at TIMESTAMP not null, reward_tag_reward_tag_id integer not null, user_id integer not null, primary key (reward_tag_wrapper_reward_id))
Hibernate: create table schedule (schedule_id integer generated by default as identity, schedule_finish_at TIMESTAMP not null, schedule_content varchar(1000), schedule_repeat_cycle integer, schedule_repeat_repeat_finish_at TIMESTAMP, schedule_title varchar(1000) not null, schedule_started_at TIMESTAMP not null, primary key (schedule_id))
Hibernate: create table team (team_team_id integer generated by default as identity, team_last_modified_at TIMESTAMP not null, team_team_name varchar(1005) not null, team_building_team_building_id integer, primary key (team_team_id))
Hibernate: create table team_building (team_building_team_building_id integer generated by default as identity, team_building_created_at TIMESTAMP not null, team_building_last_modified_at TIMESTAMP not null, team_building_team_building_title varchar(1000) not null, primary key (team_building_team_building_id))
Hibernate: create table team_user (team_user_id integer generated by default as identity, team_team_id integer not null, user_id integer not null, primary key (team_user_id))
Hibernate: create table user (user_id integer generated by default as identity, user_created_at DATE not null, user_name varchar(50) not null, user_phone_number varchar(15) not null, user_user_id varchar(50) not null, user_user_password varchar(20) not null, character_id integer not null, primary key (user_id))
Hibernate: create table user_joining_pool (user_joining_pool_id integer generated by default as identity, user_created_at DATE not null, user_name varchar(50) not null, user_phone_number varchar(15) not null, user_user_id varchar(50) not null, user_user_password varchar(20) not null, primary key (user_joining_pool_id))
Hibernate: create table waiver (waiver_waiver_id integer generated by default as identity, waiver_waiver_date DATE not null, waiver_waiver_reason varchar(1000), user_id integer not null, primary key (waiver_waiver_id))
Hibernate: alter table attendance_type_reward add constraint UK_ot60popbtj9yd51ftjok579e6 unique (attendance_type_name)
Hibernate: alter table attendance_user add constraint UK_8hkvnicn7gwsd8lu2mf01omh4 unique (user_id)
Hibernate: alter table character add constraint UK_bmatek6fkfm6ni355sv7dylqy unique (character_character_name)
Hibernate: alter table comment add constraint UK_mxoojfj9tmy8088avf57mpm02 unique (user_id)
Hibernate: alter table reaction_user add constraint UK_phy9q3ci3kgmbdsf5m6v6cvi0 unique (user_id)
Hibernate: alter table reward_tag_wrapper add constraint UK_ccex1c8efksordf33bgpptw2g unique (reward_tag_reward_tag_id)
Hibernate: alter table user add constraint UK_odiq9iu3tbt4efu91ck20xj6h unique (user_user_id)
Hibernate: alter table user_joining_pool add constraint UK_r7rj76d04tf5pcb2qsnixmwt1 unique (user_user_id)
Hibernate: alter table attendance add constraint FK1a611daqcqyoby9owj9rusxv6 foreign key (attendance_type_reward_id) references attendance_type_reward
Hibernate: alter table attendance add constraint FKmhofud6amjvnyaqyn2mlw2cb4 foreign key (attendance_user_attendance_user_id) references attendance_user
Hibernate: alter table attendance_type_reward add constraint FKltx6rc45cl7gnd3a0qo039jsy foreign key (reward_tag_reward_tag_id) references reward_tag
Hibernate: alter table attendance_user add constraint FKmq1kc386m1rj5pc3i2k5krww3 foreign key (user_id) references user
Hibernate: alter table board add constraint FK60jn05fpinj6cjhqcmtkacu2g foreign key (category_id) references category
Hibernate: alter table board add constraint FKfyf1fchnby6hndhlfaidier1r foreign key (user_id) references user
Hibernate: alter table board_file_path_list add constraint FK21o8eht55q8c4mto0uxyc2drc foreign key (board_board_id) references board
Hibernate: alter table board_image_path_list add constraint FKlwwt5k5f896x655oh3vo31sqq foreign key (board_board_id) references board
Hibernate: alter table comment add constraint FKlij9oor1nav89jeat35s6kbp1 foreign key (board_id) references board
Hibernate: alter table comment add constraint FK8kcum44fvpupyw6f5baccx25c foreign key (user_id) references user
Hibernate: alter table permission add constraint FK2gxbycwxhverw8dy6whuoosbv foreign key (character_id) references character
Hibernate: alter table reaction add constraint FK7bug6mxn1l3mq8wj67f9jxfv8 foreign key (board_id) references board
Hibernate: alter table reaction_user add constraint FKbo9v7y0tqv81llet3jsmsberf foreign key (reaction_id) references reaction
Hibernate: alter table reaction_user add constraint FKkv06rilr3svg5vxnwfa6cqxju foreign key (user_id) references user
Hibernate: alter table reward_tag_wrapper add constraint FKqj881uefl0r7x7wl38xumuvvs foreign key (reward_tag_reward_tag_id) references reward_tag
Hibernate: alter table reward_tag_wrapper add constraint FK59enq230i9cgjo7ver57s8jw7 foreign key (user_id) references user
Hibernate: alter table team add constraint FKcm2navqut5nfr2tsv8thmppce foreign key (team_building_team_building_id) references team_building
Hibernate: alter table team_user add constraint FK8n95chmkolnsw08hkvi10v8c1 foreign key (team_team_id) references team
Hibernate: alter table team_user add constraint FK6w6lkqjk13n0nmf4jbnb3d376 foreign key (user_id) references user
Hibernate: alter table user add constraint FKosvu2byscafs2p358cfdtcnyp foreign key (character_id) references character
Hibernate: alter table waiver add constraint FK1pe6nj4xw8hby9w6siqct9vqv foreign key (user_id) references user
2023-02-26 18:45:10.775  INFO 73552 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-02-26 18:45:10.779  INFO 73552 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-02-26 18:45:11.082  INFO 73552 --- [    Test worker] o.w.r.a.w.JpaWaiverServiceProviderTest   : Started JpaWaiverServiceProviderTest in 1.345 seconds (JVM running for 1.816)
2023-02-26 18:45:11.091  INFO 73552 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@66ea1466 testClass = JpaWaiverServiceProviderTest, testInstance = org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest@4b21844c, testMethod = ACCEPT_WAIVE_TEST@JpaWaiverServiceProviderTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1601e47 testClass = JpaWaiverServiceProviderTest, locations = '{}', classes = '{class org.waldreg.repository.attendance.JpaAttendanceTestInitializer, class org.waldreg.repository.attendance.waiver.WaiverRepositoryServiceProvider, class org.waldreg.repository.attendance.waiver.mapper.WaiverMapper}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:h2-application.properties}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3234f74e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@26a4842b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@d43f07c0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@350ec41e, [ImportsContextCustomizer@3bffddff key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2e029d61, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@132ddbab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@6ed7b9c5]; rollback [true]
Hibernate: insert into attendance_type_reward (attendance_type_reward_id, attendance_type_name, reward_tag_reward_tag_id) values (default, ?, ?)
Hibernate: insert into attendance_type_reward (attendance_type_reward_id, attendance_type_name, reward_tag_reward_tag_id) values (default, ?, ?)
Hibernate: insert into attendance_type_reward (attendance_type_reward_id, attendance_type_name, reward_tag_reward_tag_id) values (default, ?, ?)
Hibernate: insert into attendance_type_reward (attendance_type_reward_id, attendance_type_name, reward_tag_reward_tag_id) values (default, ?, ?)
Hibernate: insert into character (character_id, character_character_name) values (default, ?)
Hibernate: insert into user (user_id, character_id, user_created_at, user_name, user_phone_number, user_user_id, user_user_password) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into attendance_user (attendance_user_attendance_user_id, user_id) values (default, ?)
Hibernate: insert into waiver (waiver_waiver_id, waiver_waiver_date, waiver_waiver_reason, user_id) values (default, ?, ?, ?)
Hibernate: select waiver0_.waiver_waiver_id as waiver_w1_20_, waiver0_.waiver_waiver_date as waiver_w2_20_, waiver0_.waiver_waiver_reason as waiver_w3_20_, waiver0_.user_id as user_id4_20_ from waiver waiver0_
Hibernate: select attendance0_.attendance_attendance_id as attendan1_0_, attendance0_.attendance_attendance_date as attendan2_0_, attendance0_.attendance_type_reward_id as attendan3_0_, attendance0_.attendance_user_attendance_user_id as attendan4_0_ from attendance attendance0_ cross join attendance_user attendance1_ where attendance0_.attendance_user_attendance_user_id=attendance1_.attendance_user_attendance_user_id and attendance1_.user_id=? and ?<=attendance0_.attendance_attendance_date and attendance0_.attendance_attendance_date<=?
Hibernate: select attendance0_.attendance_user_attendance_user_id as attendan1_2_, attendance0_.user_id as user_id2_2_ from attendance_user attendance0_ where attendance0_.user_id=?
Hibernate: select attendance0_.attendance_type_reward_id as attendan1_1_, attendance0_.attendance_type_name as attendan2_1_, attendance0_.reward_tag_reward_tag_id as reward_t3_1_ from attendance_type_reward attendance0_ where attendance0_.attendance_type_name=?
Hibernate: insert into attendance (attendance_attendance_id, attendance_attendance_date, attendance_type_reward_id, attendance_user_attendance_user_id) values (default, ?, ?, ?)
Hibernate: select attendance0_.attendance_attendance_id as attendan1_0_, attendance0_.attendance_attendance_date as attendan2_0_, attendance0_.attendance_type_reward_id as attendan3_0_, attendance0_.attendance_user_attendance_user_id as attendan4_0_ from attendance attendance0_ cross join attendance_user attendance1_ where attendance0_.attendance_user_attendance_user_id=attendance1_.attendance_user_attendance_user_id and attendance1_.user_id=? and ?<=attendance0_.attendance_attendance_date and attendance0_.attendance_attendance_date<=?
Hibernate: select attendance0_.attendance_type_reward_id as attendan1_1_, attendance0_.attendance_type_name as attendan2_1_, attendance0_.reward_tag_reward_tag_id as reward_t3_1_ from attendance_type_reward attendance0_ where attendance0_.attendance_type_name=?
Hibernate: update attendance set attendance_attendance_date=?, attendance_type_reward_id=?, attendance_user_attendance_user_id=? where attendance_attendance_id=?
Hibernate: select attendance0_.attendance_attendance_id as attendan1_0_, attendance0_.attendance_attendance_date as attendan2_0_, attendance0_.attendance_type_reward_id as attendan3_0_, attendance0_.attendance_user_attendance_user_id as attendan4_0_ from attendance attendance0_ cross join attendance_user attendance1_ where attendance0_.attendance_user_attendance_user_id=attendance1_.attendance_user_attendance_user_id and attendance1_.user_id=? and ?<=attendance0_.attendance_attendance_date and attendance0_.attendance_attendance_date<=?
2023-02-26 18:45:11.248  INFO 73552 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@66ea1466 testClass = JpaWaiverServiceProviderTest, testInstance = org.waldreg.repository.attendance.waiver.JpaWaiverServiceProviderTest@4b21844c, testMethod = ACCEPT_WAIVE_TEST@JpaWaiverServiceProviderTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1601e47 testClass = JpaWaiverServiceProviderTest, locations = '{}', classes = '{class org.waldreg.repository.attendance.JpaAttendanceTestInitializer, class org.waldreg.repository.attendance.waiver.WaiverRepositoryServiceProvider, class org.waldreg.repository.attendance.waiver.mapper.WaiverMapper}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{classpath:h2-application.properties}', propertySourceProperties = '{org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@3234f74e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@26a4842b, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@d43f07c0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@350ec41e, [ImportsContextCustomizer@3bffddff key = [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.sql.init.SqlInitializationAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2e029d61, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@132ddbab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
